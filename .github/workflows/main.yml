name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.0.0
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          ssh-strict: true
          persist-credentials: true
          clean: true
          sparse-checkout-cone-mode: true
          fetch-depth: 1
          show-progress: true
          set-safe-directory: true

      - name: Setup Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.x
          check-latest: true

      - name: Install Dependencies
        run: pip install -r requirements.txt
        
      - name: Python Test Action
        # You may pin to the exact commit or the version.
        # uses: rcmdnk/python-action@e7cdfa6b8ec74fadbe4ef6c931b69df931c58428
        uses: rcmdnk/python-action@v2.0.0
        with:
          # Set 1 to run checkout.
          checkout: 1
          # Set 1 to run setup-python.
          setup-python: 1
          # pip command (e.g. `pip`, `pip3`, `pip3.10`).
          pip: pip
          # Python environment setup command.
          setup-cmd: poetry install
          # Set 1 to setup by poetry.
          poetry: 1
          # Cache type, "pip" or "poetry".
          cache: poetry
          # Set 1 to run pytest.
          pytest: 1
          # Path to the directory of the test files.
          pytest-tests-path: tests/
          # Set 1 to run benchmark tests separately (execute only once at the main test, by --benchmark-disable) and show the benchmark results in the summary (need pytest-benchmark).
          pytest-separate-benchmark: 0
          # Set 1 to check coverage for pytest (pytest-cov will be installed if not installed).
          coverage: 1
          # Path to check coverage.
          pytest-cov-path: src
          # Set 1 to push the coverage result to coverage branch.
          coverage-push: 0
          # Token to push the coverage branch.
          github_token: ${{ github.token }}
          # Set 1 to run pre-commit.
          pre-commit: 0
          # Set 1 to run tmate.
          tmate: 0
